class PersonLocation < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[PersonLocation, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def person_id: () -> Integer

    def person_id=: (Integer) -> Integer

    def person_id?: () -> bool

    def person_id_changed?: () -> bool

    def person_id_change: () -> [ Integer?, Integer? ]

    def person_id_will_change!: () -> void

    def person_id_was: () -> Integer?

    def person_id_previously_changed?: () -> bool

    def person_id_previous_change: () -> Array[Integer?]?

    def person_id_previously_was: () -> Integer?

    def person_id_before_last_save: () -> Integer?

    def person_id_change_to_be_saved: () -> Array[Integer?]?

    def person_id_in_database: () -> Integer?

    def saved_change_to_person_id: () -> Array[Integer?]?

    def saved_change_to_person_id?: () -> bool

    def will_save_change_to_person_id?: () -> bool

    def restore_person_id!: () -> void

    def clear_person_id_change: () -> void

    def location_id: () -> Integer

    def location_id=: (Integer) -> Integer

    def location_id?: () -> bool

    def location_id_changed?: () -> bool

    def location_id_change: () -> [ Integer?, Integer? ]

    def location_id_will_change!: () -> void

    def location_id_was: () -> Integer?

    def location_id_previously_changed?: () -> bool

    def location_id_previous_change: () -> Array[Integer?]?

    def location_id_previously_was: () -> Integer?

    def location_id_before_last_save: () -> Integer?

    def location_id_change_to_be_saved: () -> Array[Integer?]?

    def location_id_in_database: () -> Integer?

    def saved_change_to_location_id: () -> Array[Integer?]?

    def saved_change_to_location_id?: () -> bool

    def will_save_change_to_location_id?: () -> bool

    def restore_location_id!: () -> void

    def clear_location_id_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def person: () -> Person
  def person=: (Person?) -> Person?
  def reload_person: () -> Person?
  def build_person: (untyped) -> Person
  def create_person: (untyped) -> Person
  def create_person!: (untyped) -> Person
  def location: () -> Location
  def location=: (Location?) -> Location?
  def reload_location: () -> Location?
  def build_location: (untyped) -> Location
  def create_location: (untyped) -> Location
  def create_location!: (untyped) -> Location
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[PersonLocation, Integer]
    include Enumerable[PersonLocation]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[PersonLocation, Integer]
  end
end
